!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.Telemetric=t():e.Telemetric=t()}(this,(()=>(()=>{"use strict";var e={d:(t,r)=>{for(var o in r)e.o(r,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:r[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{default:()=>r});class r{static projectID=null;static userID=null;static version=null;static initial=!1;static async init(e,t,r=!1){if(this.projectID=e,this.version=t,await this._initializeUserID(),"localhost"!==window.location.hostname||this.trackOnLocalhost)try{(await fetch("https://hkromzwdaxhcragbcnmw.supabase.co/functions/v1/init",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({project_id:this.projectID,user_id:this.userID,version:this.version,referrer:document.referrer})})).ok||console.error("Failed to initialize Telemetric")}catch(e){}else console.log("Telemetric initialized successfully, but will not send any data on Localhost.")}static async event(e){if(this.safetyCheck(`Event '${e}'`))if("localhost"!==window.location.hostname||this.trackOnLocalhost)try{const t=await fetch("https://hkromzwdaxhcragbcnmw.supabase.co/functions/v1/event",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({project_id:this.projectID,name:e,referrer:document.referrer,version:this.version})});t.ok||console.error("Failed to send event:",t.status)}catch(e){console.error("Telemetric Event Error:",e)}else console.log("Telemetric: Not tracking on localhost.")}static async revenue(e){if(this.safetyCheck("Revenue"))if("localhost"!==window.location.hostname||this.trackOnLocalhost)try{const t=await fetch("https://hkromzwdaxhcragbcnmw.supabase.co/functions/v1/revenue",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({project_id:this.projectID,version:this.version,referrer:document.referrer,total:e})});t.ok||console.error("Failed to send revenue:",t.status)}catch(e){console.error("Telemetric Revenue Error:",e)}else console.log("Telemetric: Not tracking on localhost.")}static safetyCheck(e){let t=!0;return this.projectID||(console.error(`${e} reporting failed. Missing project ID.`),t=!1),this.userID||(console.error(`${e} reporting failed. Missing user ID. Make sure to call init() before tracking events or revenue. Also make sure to await init()`),t=!1),t}static async _initializeUserID(){this.userID=localStorage.getItem("telemetric_user_id"),this.userID||(this.initial=!0,this.userID=this._generateUserID(),localStorage.setItem("telemetric_user_id",this.userID))}static _generateUserID(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(e=>{const t=Math.floor(16*Math.random()).toString(16);return"x"===e?t:(3&t|8).toString(16)}))}static async saveUserID(e){localStorage.setItem("telemetric_user_id",e),this.userID=e}static async getUserID(){return this.userID=localStorage.getItem("telemetric_user_id"),this.userID}}return t})()));